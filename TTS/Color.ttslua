--- Color manipulation.
-- @author Darrell

local TAG = 'CrLua.Color'

CrLua = CrLua or {}  -- global, <include> wraps in a do .. end block
CrLua.Color = assert(not CrLua.Color) and {
    _require = {}
}

--- Returns the RGB equivalent of the given HSV-defined color
-- @author https://github.com/luapower/color/blob/master/color.lua
function CrLua.Color.HSVtoRGB(h, s, v)
    if s == 0 then --gray
		return v, v, v
	end
	local H = h / 60.0
	local i = math.floor(H) --which 1/6 part of hue circle
	local f = H - i
	local p = v * (1 - s)
	local q = v * (1 - s * f)
	local t = v * (1 - s * (1 - f))
	if i == 0 then
		return v, t, p
	elseif i == 1 then
		return q, v, p
	elseif i == 2 then
		return p, v, t
	elseif i == 3 then
		return p, q, v
	elseif i == 4 then
		return t, p, v
	else
		return v, p, q
	end
end

--- Returns the HSV equivalent of the given RGB-defined color
-- @author https://github.com/luapower/color/blob/master/color.lua
function CrLua.Color.RGBtoHSV(red, green, blue)
    local K = 0
	if g < b then
		g, b = b, g
		K = -1
	end
	if r < g then
		r, g = g, r
		K = -2 / 6 - K
	end
	local chroma = r - math.min(g, b)
	local h = math.abs(K + (g - b) / (6 * chroma + 1e-20))
	local s = chroma / (r + 1e-20)
	local v = r
	return h * 360, s, v
end

-- @author https://github.com/luapower/color/blob/master/color.lua
function CrLua.Color.HSLtoRGB(h, s, L)
    --hsl is in (0..360, 0..1, 0..1); rgb is (0..1, 0..1, 0..1)
    local function h2rgb(m1, m2, h)
    	if h < 0 then h = h + 1 end
    	if h > 1 then h = h - 1 end
    	if h * 6 < 1 then
    		return m1 + (m2 - m1) * h * 6
    	elseif h * 2 < 1 then
    		return m2
    	elseif h * 3 < 2 then
    		return m1 + (m2 - m1) * (2 / 3 - h) * 6
    	else
    		return m1
    	end
    end
    h = h / 360.0
    local m2 = L <= 0.5 and L * (s + 1) or L + s - L * s
    local m1 = L * 2 - m2
    local r = h2rgb(m1, m2, h+1/3)
    local g = h2rgb(m1, m2, h)
    local b = h2rgb(m1, m2, h-1/3)
    return r, g, b
end

--rgb is in (0..1, 0..1, 0..1); hsl is (0..360, 0..1, 0..1)
-- @author https://github.com/luapower/color/blob/master/color.lua
function CrLua.Color.RGBtoHSL(r, g, b)
    local min = math.min(r, g, b)
	local max = math.max(r, g, b)
	local delta = max - min

	local h, s, l = 0, 0, (min + max) / 2

	if l > 0 and l < 0.5 then s = delta / (max + min) end
	if l >= 0.5 and l < 1 then s = delta / (2 - max - min) end

	if delta > 0 then
		if max == r and max ~= g then h = h + (g - b) / delta end
		if max == g and max ~= b then h = h + 2 + (b - r) / delta end
		if max == b and max ~= r then h = h + 4 + (r - g) / delta end
		h = h / 6
	end

	if h < 0 then h = h + 1 end
	if h > 1 then h = h - 1 end

	return h * 360, s, l
end
