function getHelperClient(helperObjectName)
    local function getHelperObject()
        for _, object in ipairs(getAllObjects()) do
            if object.getName() == helperObjectName then return object end
        end
        error('missing object "' .. helperObjectName .. '"')
    end
    local helperObject = false
    local function getCallWrapper(functionName)
        helperObject = helperObject or getHelperObject()
        if not helperObject.getVar(functionName) then error('missing ' .. helperObjectName .. '.' .. functionName) end
        return function(parameters) return helperObject.call(functionName, parameters) end
    end
    return setmetatable({}, { __index = function(t, k) return getCallWrapper(k) end })
end

local systemHelper = getHelperClient('TI4_SYSTEM_HELPER')

local function systemFromTileNumber(tile)
    for _, system in ipairs(systemHelper.systems()) do
        if system.tile == tile then return system end
    end
end

function onLoad(save_state)
    print(self.getName() .. '.onLoad')

    -- Walk the system table looking for any bad entries.
    systemHelper.verifyAllSystems()

    -- Get system.
    local system = systemHelper.systemFromPosition({ x = 0, y = 1, z = 0 })
    assert(system)
    assert(system.guid == '04df02')
    assert(#system.planets == 1)
    assert(system.planets[1].resources == 1)
    assert(system.planets[1].influence == 6)
    assert(system.planets[1].name == 'Mecatol Rex')
    print('system.string: ' .. system.string)

    -- Get planet inside system.
    local planet = systemHelper.planetFromPosition({
        systemGuid = assert(system.guid),
        position = { x = 0, y = 0, z = 0 },
        exact = true  -- optional
    })
    assert(planet)
    assert(planet.name == 'Mecatol Rex')

    local systems = systemHelper.systems()
    assert(systems['04df02'])  -- guid keys

    local planets = systemHelper.planets()
    assert(planets['mecatol rex'])  -- lowercase planet name keys

    local others = systemHelper.nonPlanetResourceInfluenceCards()
    assert(others['core mining'])  -- lowercase card name keys
end
